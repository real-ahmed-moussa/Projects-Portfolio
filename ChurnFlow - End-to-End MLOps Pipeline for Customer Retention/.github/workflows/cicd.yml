name: CI/CD

on:
  push:
    branches: [ test ]            # to be changed to main
  pull_request:
    branches: [ test ]            # to be changed to main
  workflow_dispatch: {}

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    env:
      APP_BASE: ${{ github.workspace }}
      PYTHONUNBUFFERED: "1"
      PYTHONHASHSEED: "0"
      GIT_PYTHON_REFRESH: quiet
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
      MLFLOW_EXPERIMENT_NAME: churn_prediction_model

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.8"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html flake8

      - name: Prepare MLflow dir
        run: |
          rm -rf "${APP_BASE}/mlruns"
          mkdir -p "${APP_BASE}/mlruns"

      - name: Ensure data dir exists
        run: |
          mkdir -p "${APP_BASE}/data" "${APP_BASE}/models" "${APP_BASE}/logs"

      - name: Run Tests
        run: |
          pytest -q --maxfail=1 --disable-warnings --html=pytest-report.html --self-contained-html

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          if-no-files-found: ignore
          path: |
            pytest-report.html
            logs/**
            mlruns/**
            models/**

  release:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    env:
      IMAGE_NS: ${{ secrets.DOCKER_USERNAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA
        id: vars
        run: echo "sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure Docker layer cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build & Push API
        run: |
          docker build \
            --file api.Dockerfile \
            --tag $IMAGE_NS/mlops-churn-api:latest \
            --tag $IMAGE_NS/mlops-churn-api:${{ steps.vars.outputs.sha }} \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            .
          docker push $IMAGE_NS/mlops-churn-api:latest
          docker push $IMAGE_NS/mlops-churn-api:${{ steps.vars.outputs.sha }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build & Push Monitor
        run: |
          docker build \
            --file monitor.Dockerfile \
            --tag $IMAGE_NS/mlops-churn-monitor:latest \
            --tag $IMAGE_NS/mlops-churn-monitor:${{ steps.vars.outputs.sha }} \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            .
          docker push $IMAGE_NS/mlops-churn-monitor:latest
          docker push $IMAGE_NS/mlops-churn-monitor:${{ steps.vars.outputs.sha }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build & Push MLflow
        run: |
          docker build \
            --file mlflow.Dockerfile \
            --tag $IMAGE_NS/mlops-churn-mlflow:latest \
            --tag $IMAGE_NS/mlops-churn-mlflow:${{ steps.vars.outputs.sha }} \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            .
          docker push $IMAGE_NS/mlops-churn-mlflow:latest
          docker push $IMAGE_NS/mlops-churn-mlflow:${{ steps.vars.outputs.sha }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
